# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:
  buildConfiguration: 'Release'
  packageVersion: '1.0.$(Build.BuildId)'
  
trigger:
- master

pool:
  vmImage: windows-latest

steps:
- task: DotNetCoreCLI@2
  displayName: Restore packages
  inputs:
    command: 'restore'
    projects: |
      **/*.csproj
      !**/MVC.csproj
      !**/ImageUploaderInlineControl.RCL.KX13.csproj
      !**/WidgetizedHeaderFooter.RCL.KX13.csproj
    feedsToUse: 'select'
    
- task: DotNetCoreCLI@2
  displayName: 'dotnet build $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration) --no-restore'
    projects: |
      **/*.csproj
      !**/MVC.csproj
      !**/ImageUploaderInlineControl.RCL.KX13.csproj
      !**/WidgetizedHeaderFooter.RCL.KX13.csproj

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    packDirectory: '$(Build.ArtifactStagingDirectory)/Output'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'packageVersion'
    packagesToPack: '**/*.csproj;!**/MVC.csproj;!**/ImageUploaderInlineControl.RCL.KX13.csproj;!**/WidgetizedHeaderFooter.RCL.KX13.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/Output/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'fa18e549-9185-4bc2-9f65-59e79035681d/ee852d7c-9b17-4547-b74e-32035c80af63'
    arguments: '--skip-duplicate'

