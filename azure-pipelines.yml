# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:
  buildConfiguration: 'Release'
  
trigger:
- master

pool:
  vmImage: windows-latest

steps:
- task: DotNetCoreCLI@2
  displayName: Restore packages
  inputs:
    command: 'restore'
    projects: |
      **/*.csproj
      !**/MVC.csproj
      !**/ImageUploaderInlineControl.RCL.KX13.csproj
      !**/WidgetizedHeaderFooter.RCL.KX13.csproj
    feedsToUse: 'select'
    
- task: DotNetCoreCLI@2
  displayName: 'dotnet build $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration) --no-restore'
    projects: |
      **/*.csproj
      !**/MVC.csproj
      !**/ImageUploaderInlineControl.RCL.KX13.csproj
      !**/WidgetizedHeaderFooter.RCL.KX13.csproj

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    arguments: '--output $(Build.ArtifactStagingDirectory)/Output --no-build'
    projects: |
      **/*.csproj
      !**/MVC.csproj
      !**/ImageUploaderInlineControl.RCL.KX13.csproj
      !**/WidgetizedHeaderFooter.RCL.KX13.csproj

- task: DotNetCoreCLI@2
  displayName: "Publish packages"
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/Output/*.*nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'guid'
